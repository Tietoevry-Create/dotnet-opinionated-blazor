@using Microsoft.AspNetCore.WebUtilities
@using Microsoft.Extensions.Primitives
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))
@inject NavigationManager navigationManager

<div class="py-6 px-3 sm:px-6 lg:px-8" aria-live="polite">
    <h2 class="text-2xl font-semibold tracking-tight">@currentCount</h2>

    <div class="space-x-2 mt-2">
        <button type="button" class="button-primary" @onclick="this.IncrementCount">Click me</button>
        <button type="button" class="button-primary" @onclick="this.ToggleBox">Toggle</button>
    </div>
    
    <div>
        @if (this.currentCount > 5)
        {
            <p class="text-green-700 text-sm mt-2 font-semibold tracking-tight">Wow, more than five!</p>
        }

        @if (this.showBox)
        {
            <p class="text-green-700 text-sm mt-2 font-semibold tracking-tight">Showing some more text...</p>
        }
    </div>
</div>

@code {
    private int currentCount = 0;

    private bool showBox;

    [Parameter]
    public string IdSuffix { get; set; } = string.Empty;

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        var uri = new Uri(navigationManager.Uri);

        if (uri is not { Query: null } && uri.Query.Contains('='))
        {
            var query = QueryHelpers.ParseQuery(uri.Query);
            this.showBox = query.ContainsKey("showbox" + this.IdSuffix) && query["showbox" + this.IdSuffix] == "true";
        }
    }

    private void IncrementCount()
    {
        this.currentCount++;
    }

    private void ToggleBox()
    {
        this.showBox = !this.showBox;

        var options = new NavigationOptions
        {
            ReplaceHistoryEntry = true,
            ForceLoad = false,
        };

        var uri = new Uri(navigationManager.Uri);
        var queryArguments = new Dictionary<string, StringValues>();

        if (uri is not { Query: null } && uri.Query.Contains('='))
        {
            queryArguments = QueryHelpers.ParseQuery(uri.Query);
        }

        if (this.showBox)
        {
            queryArguments["showbox" + this.IdSuffix] = this.showBox.ToString().ToLower();
        }
        else
        {
            queryArguments.Remove("showbox" + this.IdSuffix);
        }

        var to = QueryHelpers.AddQueryString(uri.AbsolutePath, queryArguments);

        navigationManager.NavigateTo(to, options);
    }
}
